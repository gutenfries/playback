[env]
# CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true
# CARGO_MAKE_USE_WORKSPACE_PROFILE = true
DEV = true
RELEASE = false
TARGET_OS = "unknown"

[env.release]
DEV = false
RELEASE = true

[config]
skip_core_tasks = true

[tasks.default]
dependencies = ["build"]

[tasks.build]
dependencies = ["build-core", "build-cli", "build-client"]

[tasks.build-core]
args = ["build", "-p", "playback_core"]
command = "cargo"

[tasks.build-cli]
args = ["build", "-p", "playback_cli"]
command = "cargo"

[tasks.build-client]
command = "flutter_rust_bridge_codegen"
args = [
	"--rust-input",
	"../client/native/src/api.rs",
	"--dart-output",
	"../client/lib/bridge_generated.dart",
	"--dart-decl-output",
	"../client/lib/bridge_definitions.dart",
	"--c-output",
	"../client/ios/Runner/bridge_generated.h",
	"--c-output",
	"../client/macos/Runner/bridge_generated.h",
	"--wasm",
]

[tasks.format]
category = "Format"
dependencies = ["rustfmt", "clang-format", "flutter-format"]

[tasks.clang-format]
args = ["../dev_utils/clang-format.sh"]
command = "bash"

[tasks.clang-tidy]
args = ["../dev_utils/clang-tidy.sh"]
command = "bash"

[tasks.flutter-format]
windows.command = "flutter.bat"
linux.command = "flutter"
mac.command = "flutter"
args = ["format", "."]

[tasks.rustfmt]
args = ["fmt", "--all", "--", "--emit=files"]
category = "Format"
command = "cargo"
description = "Format Rust code"
install_crate = "rustfmt"

[tasks.clean]
dependencies = ["cargo-clean", "flutter-clean"]

[tasks.cargo-clean]
args = ["clean"]
command = "cargo"

[tasks.flutter-clean]
args = ["clean"]
windows.command = "flutter.bat"
linux.command = "flutter"
mac.command = "flutter"


[tasks.test]
args = ["test"]
category = "Test"
command = "cargo"

[tasks.lint]
category = "Lint"
dependencies = ["format", "clippy", "clang-tidy"]
description = "Runs all linters"

[tasks.lint-fix]
category = "Lint"
dependencies = ["clippy-fix"]

[tasks.clippy-fix]
args = [
	"+nightly",
	"clippy",
	"--fix",
	"--all-targets",
	"--all-features",
	"--",
	"-D",
	"clippy::all",
	"-D",
	"clippy::await_holding_refcell_ref",
	"-D",
	"clippy::missing_safety_doc",
	"-D",
	"clippy::undocumented_unsafe_blocks",
]
category = "Lint"
command = "cargo"
description = "Runs the rust linter"
install_crate = "clippy"

[tasks.clippy]
args = [
	"+nightly",
	"clippy",
	"--all-targets",
	"--all-features",
	"--",
	"-D",
	"clippy::all",
	"-D",
	"clippy::await_holding_refcell_ref",
	"-D",
	"clippy::missing_safety_doc",
	"-D",
	"clippy::undocumented_unsafe_blocks",
]
category = "Lint"
command = "cargo"
description = "Runs the rust linter"
install_crate = "clippy"

[tasks.run]
args = ["run", "--bin cli"]
category = "Run"
command = "cargo"
description = "Runs the cli."
