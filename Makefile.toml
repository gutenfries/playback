
[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true
DEV = true
RELEASE = false
TARGET_OS = "unknown"

[env.release]
DEV = false
RELEASE = true

[tasks.default]
dependencies = ["build"]

[tasks.build]
workspace = false
dependencies = ["build-client", "build-core"]

[tasks.build-core]
workspace = false
command = "cargo"
args = ["build"]

[tasks.build-client]
workspace = false
command = "cargo"
args = [
	"make",
	"--cwd",
	"./client/",
	"--makefile",
	"./Makefile.toml",
	"build",
]


[tasks.format]
category = "Format"
dependencies = [
	"rustfmt",
	"clang-format",
]

[tasks.clang-format]
workspace = false
command = "bash"
args = ["../dev_utils/clang-format.sh"]

[tasks.clang-tidy]
workspace = false
command = "bash"
args = ["../dev_utils/clang-tidy.sh"]

[tasks.rustfmt]
args = [
	"fmt",
	"--all",
	"--",
	"--emit=files",
]
category = "Format"
command = "cargo"
description = "Format Rust code"
install_crate = "rustfmt"

[tasks.clean]
dependencies = [
	"cargo-clean",
	"flutter-clean",
]

[tasks.cargo-clean]
command = "cargo"
args = ["clean"]

[tasks.flutter-clean]
windows_alias = "flutter-clean-windows"
linux_alias = "flutter-clean-unix"

[tasks.flutter-clean-windows]
command = "flutter.bat"
args = ["clean"]

[tasks.flutter-clean-unix]
command = "flutter"
args = ["clean"]

[tasks.test]
args = ["test"]
category = "Test"
command = "cargo"

[tasks.lint]
category = "Lint"
description = "Runs all linters"
dependencies = [
	"format",
	"clippy",
	"clang-tidy",
]


[tasks.lint-fix]
category = "Lint"
dependencies = [
	"clippy-fix"
]

[tasks.clippy-fix]
args = [
	"+nightly",
	"clippy",
	"--fix",
	"--all-targets",
	"--all-features",
	"--",
	"-D",
	"clippy::all",
	"-D",
	"clippy::await_holding_refcell_ref",
	"-D",
	"clippy::missing_safety_doc",
	"-D",
	"clippy::undocumented_unsafe_blocks"
]
category = "Lint"
command = "cargo"
description = "Runs the rust linter"
install_crate = "clippy"

[tasks.clippy]
args = [
	"+nightly",
	"clippy",
	"--all-targets",
	"--all-features",
	"--",
	"-D",
	"clippy::all",
	"-D",
	"clippy::await_holding_refcell_ref",
	"-D",
	"clippy::missing_safety_doc",
	"-D",
	"clippy::undocumented_unsafe_blocks"
]
category = "Lint"
command = "cargo"
description = "Runs the rust linter"
install_crate = "clippy"

[tasks.run]
args = [
	"run",
	"--bin cli",
]
category = "Run"
command = "cargo"
description = "Runs the cli."
